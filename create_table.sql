CREATE TABLE BRAND(
	BRAND_ID VARCHAR(255) PRIMARY KEY,
	BARCODE VARCHAR(255),
	BRAND_CODE VARCHAR(255),
	CPG_ID VARCHAR(255),
	CATEGORY VARCHAR(255),
	CATEGORY_CODE VARCHAR(255),
	NAME VARCHAR(255),
	ROMANCE_TEXT VARCHAR(1023),
	RELATED_BRAND_IDS VARCHAR(255)
);

CREATE TABLE USERS(
	CREATED_DATE DATE,
	BIRTH_DATE DATE,
	GENDER VARCHAR(63),
	LAST_REWARDS_LOGIN VARCHAR(255),
	STATE VARCHAR(7),
	SIGN_UP_PLATFORM VARCHAR(63),
	SIGN_UP_SOURCE VARCHAR(63),
	USER_ID VARCHAR(255) PRIMARY KEY
);

CREATE TABLE RECEIPTS(
	RECEIPT_ID VARCHAR(255) PRIMARY KEY,
	STORE_NAME VARCHAR(255),
	PURCHASE_DATE DATE,
	PURCHASE_TIME TIME,
	DATE_SCANNED DATE,
	TOTAL_SPENT FLOAT,
	REWARDS_RECEIPT_STATUS VARCHAR(255),
	USER_ID VARCHAR(255),
	USER_VIEWED VARCHAR(255),
	PURCHASED_ITEM_COUNT INT,
	CREATE_DATE TIMESTAMP,
	PENDING_DATE TIMESTAMP,
	MODIFY_DATE TIMESTAMP,
	FLAGGED_DATE TIMESTAMP,
	PROCESSED_DATE TIMESTAMP,
	FINISHED_DATE TIMESTAMP,
	REJECTED_DATE TIMESTAMP,
	NEEDS_FETCH_REVIEW BOOLEAN,
	DIGITAL_RECEIPT BOOLEAN,
	DELETED BOOLEAN,
	NON_POINT_EARNING_RECEIPT BOOLEAN,
	FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE RECEIPT_ITEM(
	REWARDS_RECEIPT_ID VARCHAR(255),
	ITEM_INDEX INT,
	REWARDS_RECEIPT_ITEM_ID VARCHAR(255) PRIMARY KEY,
	DESCRIPTION VARCHAR(1023),
	BARCODE VARCHAR(255),
	BRAND_CODE VARCHAR(255),
	QUANTITY_PURCHASED FLOAT,
	TOTAL_FINAL_PRICE FLOAT,
	POINTS_EARNED FLOAT,
	REWARDS_GROUP VARCHAR(255),
	ORIGINAL_RECEIPT_ITEM_TEXT VARCHAR(1023),
	MODIFY_DATE TIMESTAMP,
	FOREIGN KEY (REWARDS_RECEIPT_ID) REFERENCES RECEIPTS(RECEIPT_ID)
);

COPY BRAND FROM 'D:\Data\brands_processed.csv' DELIMITER ',' CSV;
COPY USERS FROM 'D:\Data\users_processed.csv' DELIMITER ',' CSV;
COPY RECEIPTS FROM 'D:\Data\receipts_processed.csv' DELIMITER ',' CSV;
COPY RECEIPT_ITEM FROM 'D:\Data\receipt_items_processed.csv' DELIMITER ',' CSV;

SELECT RI.BRAND_CODE, SUM(RI.TOTAL_FINAL_PRICE) FROM RECEIPT_ITEM AS RI INNER JOIN RECEIPTS AS R ON R.RECEIPT_ID=RI.REWARDS_RECEIPT_ID WHERE BRAND_CODE IS NOT NULL AND EXTRACT(MONTH FROM R.PURCHASE_DATE)=6 AND RI.TOTAL_FINAL_PRICE IS NOT NULL GROUP BY BRAND_CODE ORDER BY SUM(TOTAL_FINAL_PRICE) DESC;

SELECT * FROM USERS WHERE USER_ID=(SELECT USER_ID FROM RECEIPTS WHERE EXTRACT(MONTH FROM PURCHASE_DATE)=8 GROUP BY USER_ID  ORDER BY SUM(TOTAL_SPENT) DESC LIMIT 1);

SELECT * FROM USERS WHERE USER_ID=(SELECT R.USER_ID FROM RECEIPTS AS R INNER JOIN RECEIPT_ITEM AS RI ON R.RECEIPT_ID=RI.REWARDS_RECEIPT_ID INNER JOIN BRAND AS B ON B.BRAND_CODE=RI.BRAND_CODE WHERE B.BRAND_CODE IS NOT NULL AND EXTRACT(MONTH FROM R.PURCHASE_DATE)=6 AND RI.TOTAL_FINAL_PRICE IS NOT NULL ORDER BY TOTAL_FINAL_PRICE DESC LIMIT 1);

SELECT B.NAME, RI.TOTAL_FINAL_PRICE FROM RECEIPTS AS R INNER JOIN RECEIPT_ITEM AS RI ON R.RECEIPT_ID=RI.REWARDS_RECEIPT_ID INNER JOIN BRAND AS B ON B.BRAND_CODE=RI.BRAND_CODE WHERE B.BRAND_CODE IS NOT NULL AND EXTRACT(MONTH FROM R.PURCHASE_DATE)=6 AND RI.TOTAL_FINAL_PRICE IS NOT NULL ORDER BY TOTAL_FINAL_PRICE DESC LIMIT 1;

SELECT TO_CHAR(DATE_TRUNC('month',DATE_SCANNED),'YYYY-MM'), COUNT(USER_ID) FROM RECEIPTS GROUP BY DATE_TRUNC('month',DATE_SCANNED) ORDER BY DATE_TRUNC('month',DATE_SCANNED);

